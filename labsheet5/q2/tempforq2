import java_cup.runtime.Symbol; 
import java_cup.runtime.Scanner; 
%% 
%cup
%eofval{ 
return new Symbol(sym.EOFILE);
%eofval}

digit=[0-9]
letter=[a-zA-z]
special=[!@$%^*()_+]
whitespace=[\t\n\r]

%% 
"=" {System.out.println("LA "+yytext());return new Symbol(sym.EQUAL);}
";"  {System.out.println("LA "+yytext());return new Symbol(sym.SEMI);} 
","  {System.out.println("LA "+yytext());return new Symbol(sym.COMMA);} 
" "  {System.out.println("LA "+yytext());return new Symbol(sym.SPACE);} 
[0-9]+ {System.out.println("LA "+yytext());return new Symbol(sym.INTVAL,new  Integer(yytext()));} 
{digit}+\.{digit}+ {System.out.println("LA "+yytext());return new Symbol(sym.FLOATVAL,new Float(yytext()));}
\"({letter}|{digit}|{special})*\" {System.out.println("LA "+yytext());return new Symbol(sym.STRVAL,new String(yytext()));}
"[" {System.out.println("LA "+yytext());return new Symbol(sym.OSQ);}
"]" {System.out.println("LA "+yytext());return new Symbol(sym.CSQ);}
"NULL" {System.out.println("LA "+yytext()); return new Symbol(sym.NULLVAL,null);}
"int" {System.out.println("LA "+yytext());return new Symbol(sym.INT);} 
"var" {System.out.println("LA "+yytext());return new Symbol(sym.VAR);}
"string" {System.out.println("LA "+yytext());return new Symbol(sym.STRING);}
"float" {System.out.println("LA "+yytext()); return new Symbol(sym.FLOAT);}
"const" {System.out.println("LA "+yytext()); return new Symbol(sym.CONST);}
[\n] {System.out.println("LA "+yytext());return new Symbol(sym.NEWL);}
[a-z][a-z0-9]* {System.out.println("LA "+yytext());
return new Symbol(sym.ID,new String(yytext()));} 

import java_cup.runtime.*; 
	scan with {: return getScanner().next_token(); :};
	terminal INT,STRING,SEMI,COMMA,ID, SPACE, EOFILE, NEWL, EQUAL, INTVAL, VAR, STRVAL, OSQ, CSQ, FLOATVAL, FLOAT, CONST, NULLVAL;
	non terminal prog, stmt, decln, s, varlistint, varliststr, varlistfloat;
	s::=prog {: System.out.println("Valid declaration");System.exit(0); :} EOFILE {: System.exit(0); :};
	prog::=prog stmt |stmt ;
	stmt::=decln | decln NEWL;
	decln::= VAR SPACE INT SPACE varlistint SEMI | VAR SPACE STRING SPACE varliststr SEMI | VAR SPACE FLOAT SPACE varlistfloat SEMI | CONST SPACE INT SPACE ID EQUAL INTVAL SEMI | CONST SPACE STRING SPACE ID EQUAL STRVAL SEMI | CONST SPACE FLOAT SPACE ID EQUAL FLOATVAL SEMI;
	
	varlistint::= ID COMMA varlistint | ID | ID EQUAL INTVAL COMMA varlistint | ID EQUAL INTVAL | ID EQUAL NULLVAL COMMA varlistint | ID EQUAL NULLVAL | ID OSQ INTVAL CSQ COMMA varlistint | ID OSQ INTVAL CSQ ;
	
	varliststr::= ID COMMA varliststr | ID | ID EQUAL STRVAL COMMA varliststr | ID EQUAL STRVAL | ID EQUAL NULLVAL COMMA varlistint | ID EQUAL NULLVAL | ID OSQ INTVAL CSQ COMMA varlistint | ID OSQ INTVAL CSQ;
	
	varlistfloat::=ID COMMA varlistfloat | ID | ID EQUAL FLOATVAL COMMA varlistfloat | ID EQUAL FLOATVAL | ID EQUAL NULLVAL COMMA varlistint | ID EQUAL NULLVAL | ID OSQ INTVAL CSQ COMMA varlistint | ID OSQ INTVAL CSQ;
